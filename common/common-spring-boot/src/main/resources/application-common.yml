# Common Spring Boot configuration for all services
# Services should include this profile: spring.profiles.include=common

server:
  servlet:
    context-path: /api

spring:
  application:
    name: ${SERVICE_NAME:unknown-service}
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.natsu.common.model,com.natsu.services"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  # Jackson Configuration
  jackson:
    time-zone: UTC
    serialization:
      write-dates-as-timestamps: false
  
  # Security Configuration
  security:
    user:
      name: ${SECURITY_USER:admin}
      password: ${SECURITY_PASSWORD:admin}
      roles: ${SECURITY_ROLES:ADMIN}

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      cloudwatch:
        enabled: ${CLOUDWATCH_METRICS_ENABLED:false}
        namespace: ${CLOUDWATCH_NAMESPACE:JustEnoughForAGame}
  security:
    enabled: false

# AWS Configuration
aws:
  region: ${AWS_REGION:us-east-1}
  dynamodb:
    endpoint: ${DYNAMODB_ENDPOINT:}  # Empty for AWS, set for local development
  s3:
    endpoint: ${S3_ENDPOINT:}  # Empty for AWS, set for local development

# Logging Configuration
logging:
  level:
    com.natsu: ${LOG_LEVEL:INFO}
    org.springframework.kafka: WARN
    org.springframework.data.redis: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
